{"version":3,"sources":["Display/DisplayComponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["details","prostar","filter","value","index","Table","props","map","src","pictureUrl","alt","name","popularity","onClick","handler","Display","handle","ind","shift","splice","setState","array","change","new_member","Math","floor","random","length","console","log","push","sort","a","b","popular","state","bind","className","this","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAMMA,EAAQC,EAAQC,QAAO,SAACC,EAAMC,GAChC,GAAGA,EAAM,EACP,OAAOD,KAIb,SAASE,EAAMC,GACX,OAAON,EAAQO,KAAI,SAACJ,EAAMC,GACtB,OAAO,+BACP,6BAAI,qBAAKI,IAAKL,EAAMM,WAAYC,IAAI,WACpC,6BAAKP,EAAMQ,OACX,6BAAKR,EAAMS,aACX,6BAAI,wBAAQC,QAAS,WAAKP,EAAMQ,QAAQV,IAApC,4B,IAuDGW,E,kDAjDX,WAAYT,GAAO,IAAD,8BACd,cAAMA,IAIVU,OAAO,SAACC,GACK,IAANA,EACCjB,EAAQkB,QAGRlB,EAAQmB,OAAOF,EAAI,EAAEA,GAEzB,EAAKG,SAAS,CAACC,MAAMrB,KAZP,EAelBsB,OAAO,WACH,IAAMC,EAAWtB,EAAQuB,KAAKC,MAAMD,KAAKE,SAASzB,EAAQ0B,OAAO,IACjEC,QAAQC,IAAIN,GACZvB,EAAQ8B,KAAKP,GACb,EAAKH,SAAS,CAACC,MAAMrB,KAnBP,EAqBlB+B,KAAK,WACD/B,EAAQ+B,MAAK,SAASC,EAAEC,GAAG,OAAQD,EAAErB,KAAKsB,EAAEtB,KAAM,GAAG,KACrD,EAAKS,SAAS,CAACC,MAAMrB,KAvBP,EAyBlBkC,QAAQ,WACJlC,EAAQ+B,MAAK,SAASC,EAAEC,GAAG,OAAQD,EAAEpB,WAAWqB,EAAErB,WAAY,GAAG,KACjE,EAAKQ,SAAS,CAACC,MAAMrB,KAzBrB,EAAKmC,MAAM,CAACd,MAAMrB,GAClB,EAAKgB,OAAO,EAAKA,OAAOoB,KAAZ,gBAHE,E,0CA8BlB,WACI,OAAO,sBAAKC,UAAU,UAAf,UACH,sBAAKA,UAAU,UAAf,UACA,wBAAQA,UAAU,SAASxB,QAASyB,KAAKhB,OAAzC,6BACA,wBAAQe,UAAU,OAAOxB,QAASyB,KAAKP,KAAvC,0BACA,wBAAQM,UAAU,aAAaxB,QAASyB,KAAKJ,QAA7C,mCAEA,wBAAOG,UAAU,QAAjB,UACI,+BACI,yCACA,sCACA,4CACA,2CAEJ,cAAChC,EAAD,CAAOS,QAASwB,KAAKtB,mB,GA7CfuB,IAAMC,WCXbC,MAPf,WACE,OAAQ,gCACA,qBAAKJ,UAAU,QAAf,uBACA,cAAC,EAAD,QCIKK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.db9a8b9f.chunk.js","sourcesContent":["import React from 'react';\r\nimport prostar from '../lab-react-stardom/resources/prostars.json';\r\nimport './DisplayComponent.css'\r\n\r\n\r\n// eslint-disable-next-line\r\nconst details=prostar.filter((value,index)=>{          //This contain array of first 5 stars details\r\n    if(index<5){\r\n      return value\r\n    }\r\n  })  \r\n\r\nfunction Table(props){                      //this function renturns jsx elements that we display in the table\r\n    return(details.map((value,index)=>{\r\n        return(<tr>\r\n        <td><img src={value.pictureUrl} alt=\"pics\"></img></td>\r\n        <td>{value.name}</td>\r\n        <td>{value.popularity}</td>\r\n        <td><button onClick={()=>{props.handler(index)}}>Delete</button></td>\r\n    </tr>)\r\n    }))\r\n}\r\n\r\nclass Display extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={array:details}          //hold details of stars\r\n        this.handle=this.handle.bind(this)  // event handler function        \r\n    }\r\n    handle=(ind)=>{                         //onclick function on delete button \r\n        if(ind===0){\r\n            details.shift()\r\n        }\r\n        else{\r\n            details.splice(ind-1,ind)\r\n        }\r\n        this.setState({array:details})\r\n    }\r\n\r\n    change=()=>{                            //on click on random button and this function push new star in array\r\n        const new_member=prostar[Math.floor(Math.random()*prostar.length+1)]\r\n        console.log(new_member)\r\n        details.push(new_member)\r\n        this.setState({array:details})\r\n    }\r\n    sort=()=>{                               //this function sort stars by name\r\n        details.sort(function(a,b){return (a.name>b.name)?1:-1})\r\n        this.setState({array:details})\r\n    }\r\n    popular=()=>{                             //this function sort stars by popularity\r\n        details.sort(function(a,b){return (a.popularity<b.popularity)?1:-1})\r\n        this.setState({array:details})\r\n    }\r\n   \r\n    render(){\r\n        return(<div className=\"details\">   \r\n            <div className=\"buttons\">\r\n            <button className=\"random\" onClick={this.change}>Get Random Star</button>\r\n            <button className=\"sort\" onClick={this.sort}>Sort By Name</button>\r\n            <button className=\"popularity\" onClick={this.popular}>Sort By Popularity</button>\r\n            </div>\r\n            <table className=\"table\">\r\n                <tr>\r\n                    <th>Picture</th>\r\n                    <th>Name</th>\r\n                    <th>Popularity</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n                <Table handler={this.handle}/>\r\n            </table>\r\n        </div>)\r\n    }\r\n}\r\nexport default Display;\r\n\r\n","\nimport './App.css';\nimport Display from './Display/DisplayComponent'\n\n\nfunction App() {\n  return (<div>\n          <div className=\"title\">PROSTARSs</div>\n          <Display/>   \n          </div>);             //Display component hold the details of these stars\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}